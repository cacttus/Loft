* Fix current active view for editing


it would make more sense instead of polling for events.. to have an event queue.

Gui2d controls evnets and fires them.
Mouse movement
Show / Hide UI element


a chile element is pick root if
it has a texture and has mouse events

instancing of UiElement (ugh) .. but that's what style is for
bool ShowSubElements;   


onLeaveToChild - 
onLeaveToParent
onEnterFromParent
onEnterFromChild
onLeaveHierarchy

there is no way to componentize style because the componetn itself requires sub-elements
also needs events

Attempt at create ui with JUST styles was bunk. you need "elements" because styles are not hierarchical
 (Guess,,they could be.. that would require a different file, but files are dumb because i need behaviors too)

you dont necessarily need classes like "class Buton" because uielement is generic and that stuff
like UiEelemtn button = { uiemeent labl }

put events on the uielement as style has no reason to have events

MenuContainer { position is absolute }

//same action for menuitem and toolbarbuton, however menuitem gets the flyout on HOVER not CLICK
MenuItem { position is static }
Toolbarbutton { position is static } 

var MenuContinaer = new UiElemetn(styles (position: absolute (window)), text, sub-elements:{});

basically DOM elements are our classes.
we clone DOM elements to create new elements.
 ** Now this would mean we need instancing for most elements.????
 ** not really. I mean .. The style is what is specific to the instance, so if it is instanced put it on the style
 ** That is whta the style is for .. 
 ** but then that means that events wolud need to be on the style right?
 // CLONE()
   stuff
   events = events.clone()
   i dont need those events so UIelement.events.clear()
 ** so when we clone a uielement perhaps we just copy events. Replace them if neeeded.

MenuItem

MenuItem.AddEvent(MouseHover, ()=>{ 
  show sub elements = true
  then position the container
  subelement[0].top, .left .. based on position / w/h of htis element
  this position = top , left ..
} )   

Humor me a class.
classes require data that is unique to the class . and behavior 
menu will be created with new elements * no show sub elements boolean
we need to layout menu first before we can know where it goes size / wh.

class Toolbar : UiElement { 
//this is really nothing special
width = expand
height = shrink
}
class UiButton : UiElement { 
  //this is automatic .. button has label
  OnClick .. This is automatic ..
  width = shrink
  height = shrink
}
class ToolbarButton : UiButton {
 OnClick
   Create a popup menu
}
class MenuItem : UiElement { 
  //issue here.. more menu items
 widt = shrink
 height = shrink
 display: block
 OnHover: 
  color = color * 1.2;
  PopupMenu p = new PopupMenu()
  p.top = this.AbsoluteTop -- get abslute top / right for the menu
  p.right = this.AbsoluteRight
  addChild(p)
}
class PopupMenu : UiElement { 
  //style
  Position: relative : relative to parent elemnet
  
  // behavior
  OnMouseLeaveToParent: 
    Destroy self .. how?
    so who owns Popup Elements? Gui2d? parnet?
    either Gui2d has a global "popup control" system or we handle it within parent element
        but show/hide elements becomes a problem. 
          Unless.. we are using a class and we have a handle to the Popup element we want to show
          So we use clases, and parent elements
    well OnLeaveToParent implies "parent" element .. so parent would have to own in this case.
    have a special MenuEvent that this gets when we leave to a parent popup menu
  // data
  List<MenuItem> items
}


Then .. 

******
******
******
//scratch this .. we should create a new UiElement instaed of have a child.
toolbar.AddElement(
  ToolbarButton.Clone("File").AddElement(
    MenuContainer.Clone().AddElements({
      MenuItem.Clone("Help").AddEvent(MouseClick, () => { ShowHelp(); })
      MenuItem.Clone("Exit").AddEvent(MouseClick, () => { Environment.Exit(0); })
    })
  ))

******
******
******


automatic PickRoot 
components
behaviors
menu


